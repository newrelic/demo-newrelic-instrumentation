---

- name: Ensure newrelic_license_key is defined
  fail:
    msg: "newrelic_license_key is required for configuring newrelic infrastructure agent"
  when: newrelic_license_key is not defined

- name: Ensure mysql_port has a value
  set_fact:
    mysql_port: "{{ database_port | default(3306) }}"

- name: Generate temp password
  set_fact:
    temp_password: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"

- name: Save password to file (idempotent)
  copy:
    dest: /usr/local/etc/newrelic
    owner: root
    mode: 0700
    force: false
    content: |
      {{ temp_password }}
  become: true

- name: Get newrelic user password from file
  shell: cat /usr/local/etc/newrelic
  register: command_output
  become: true

- name: Set newrelic_user_password
  set_fact:
      newrelic_user_password: "{{ command_output.stdout }}"

- name: Check if infrastructure agent logs exist
  stat:
    path: /var/log/nr-infra.log
  register: stat_result

# Clear logs (from previous deployments) to avoid a false positive in the verification step.
- name: Clear agent logs if they exist
  shell: truncate -s 0 /var/log/nr-infra.log
  when: stat_result.stat.exists
  become: true

- name: Run NewRelic Infrastructure Agent role
  include_role:
    name: newrelic.newrelic-infra
    apply:
      become: true
  vars:
    nrinfragent_config:
      license_key: "{{ newrelic_license_key }}"
      log_file: /var/log/nr-infra.log
      log_to_stdout: false
    nrinfragent_integrations:
      - { name: nri-mysql, state: "latest" }

- name: Create db user for newrelic mysql integration
  mysql_user:
    login_user: "root"
    login_password: "{{ database_password }}"
    name: "newrelic"
    password: "{{ newrelic_user_password }}"
    state: present
    host: "localhost"
    priv: "*.*:GRANT,REPLICATION CLIENT,SELECT"

- name: Write mysql integration configuration file
  template:
    src: mysql-config.yml
    dest: /etc/newrelic-infra/integrations.d/mysql-config.yml
    owner: root
  become: true

- name: Add tags as labels to integration configuration file
  lineinfile:
    path: "/etc/newrelic-infra/integrations.d/mysql-config.yml"
    line: "        {{item.key}}: {{item.value}}"
    insertafter: 'labels:'
  loop: "{{ (tags|default({}))|dict2items }}"
  when: tags is defined
  become: true

- name: Restart newrelic infrastructure agent to pick up changes to configuration file
  systemd:
    name: newrelic-infra
    state: restarted
  become: true

- name: Verify integration is working
  shell: cat /var/log/nr-infra.log | grep "\"Integration health check finished with success\" instance=mysql-server"
  register: integration_status
  until: integration_status.rc == 0
  retries: 12
  delay: 5
  # max_wait = 12 * 5 = 60 seconds
