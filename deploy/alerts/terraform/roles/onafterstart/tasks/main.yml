---

# This play require the following variable set
#   nr_api_key: "<from user config newrelic credential>"
#   nr_admin_api_key: "<from user config newrelic credential>"
#   account_id: "<from user config newrelic credential>"
#   nr_region: "<from user config newrelic credential>"
#   service_display_name: "The entity display_name to create alert for"
# The fields below are optionals
#   tags: {"dxOwningTeam":"DemoX","dxEnvironment":"development",...} JSON list of tags
#   s3_bucketname_tfstate: "<an AWS S3 bucket name to use for the terraform state file>"

- debug:
    msg: "Deploying alerts for {{ service_display_name }} using Terraform for Golden Signals policy"

- fail:
    msg: "nr_api_key is required. Create this entry in your user config file"
  when: nr_api_key is not defined
- fail:
    msg: "nr_admin_api_key is required. Create this entry in your user config file"
  when: nr_admin_api_key is not defined
- fail:
    msg: "account_id is required. Create this entry in your user config file"
  when: account_id is not defined
- fail:
    msg: "nr_region is required. Create this entry in your user config file"
  when: nr_region is not defined
- fail:
    msg: "The S3 bucket name '{{ s3_bucketname_tfstate }}' requires the addition of 'provider_credential': 'aws' in your deploy config file to use the aws credentials to access the bucket."
  when: s3_bucketname_tfstate is defined and access_key is not defined

- block:
  - name: Creating terraform var file
    set_fact:
      tfvars_json: "{{ (tfvars_json|default({})) | combine({
        'name': service_display_name,
        'service': {
          'duration': 5,
          'response_time_threshold': 5,
          'throughput_threshold': 1,
          'error_percentage_threshold': 5,
          'cpu_threshold': 90
        },
        'newrelic_api_key': nr_api_key,
        'newrelic_admin_api_key': nr_admin_api_key,
        'newrelic_account_id': account_id,
        'newrelic_region': nr_region
        })
      }}"

  - name: "write terraform var to file {{playbook_dir}}/tfvars.json"
    copy:
      content: "{{ tfvars_json | to_nice_json }}"
      dest: "{{ playbook_dir }}/tfvars.json"

  - name: create infra config file
    template:
      src: main.tf
      dest: "{{ playbook_dir }}/main.tf"

  - name: "Initialize terraform"
    shell: "terraform init"

  - name: "Execute terraform"
    shell: "terraform apply -auto-approve -var-file={{ playbook_dir }}/tfvars.json"
    register: terraform_result
    retries: 8
    delay: 15
    until: terraform_result is not failed

  delegate_to: localhost

